// <auto-generated />
using Entity4;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entity4.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220327141039_Mig_2")]
    partial class Mig_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Entity4.SystemEntity.AddresSent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DateCreate")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("MessageId")
                        .IsUnique();

                    b.ToTable("AddresSents");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Names")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Countrys");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Groups", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Entity4.SystemEntity.GroupsIntermediate", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GroupsId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupsIntermediate");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DateCreate")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsHidden")
                        .HasMaxLength(1)
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasMaxLength(1)
                        .HasColumnType("bit");

                    b.Property<string>("MessageText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ThemeId")
                        .IsUnique();

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Pol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Pols");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Profile", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PolId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Entity4.SystemEntity.RoleIntermediate", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleIntermediate");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Theme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("Entity4.SystemEntity.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CountryId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity4.SystemEntity.AddresSent", b =>
                {
                    b.HasOne("Entity4.SystemEntity.Message", "Message")
                        .WithOne("AddresSent")
                        .HasForeignKey("Entity4.SystemEntity.AddresSent", "MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Entity4.SystemEntity.GroupsIntermediate", b =>
                {
                    b.HasOne("Entity4.SystemEntity.Groups", "Groups")
                        .WithMany("GroupsIntermediates")
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity4.SystemEntity.User", "User")
                        .WithMany("GroupsIntermediates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Message", b =>
                {
                    b.HasOne("Entity4.SystemEntity.Theme", "Theme")
                        .WithOne("Message")
                        .HasForeignKey("Entity4.SystemEntity.Message", "ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Profile", b =>
                {
                    b.HasOne("Entity4.SystemEntity.Pol", "Pol")
                        .WithMany("Profile")
                        .HasForeignKey("PolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity4.SystemEntity.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Entity4.SystemEntity.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity4.SystemEntity.RoleIntermediate", b =>
                {
                    b.HasOne("Entity4.SystemEntity.Role", "Role")
                        .WithMany("RoleIntermediates")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity4.SystemEntity.User", "User")
                        .WithMany("RoleIntermediates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity4.SystemEntity.User", b =>
                {
                    b.HasOne("Entity4.SystemEntity.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Country", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Groups", b =>
                {
                    b.Navigation("GroupsIntermediates");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Message", b =>
                {
                    b.Navigation("AddresSent");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Pol", b =>
                {
                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Role", b =>
                {
                    b.Navigation("RoleIntermediates");
                });

            modelBuilder.Entity("Entity4.SystemEntity.Theme", b =>
                {
                    b.Navigation("Message");
                });

            modelBuilder.Entity("Entity4.SystemEntity.User", b =>
                {
                    b.Navigation("GroupsIntermediates");

                    b.Navigation("Profile");

                    b.Navigation("RoleIntermediates");
                });
#pragma warning restore 612, 618
        }
    }
}
